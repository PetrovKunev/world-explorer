const { createClient } = require('@supabase/supabase-js')

const supabaseUrl = 'https://bflpybciorqdbirqxsj.supabase.co'
const supabaseAnonKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImJmbHB5YmNpb3JxZGlicXJ4c2VqIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTQ0MDUwNzEsImV4cCI6MjA2OTk4MTA3MX0.eCnD02jGgs4H1DFKwYDCy_RHf7EkjsRd6vJf9dK9_T8'

const supabase = createClient(supabaseUrl, supabaseAnonKey)

async function testConnection() {
  try {
    console.log('üîó –¢–µ—Å—Ç–≤–∞–Ω–µ –Ω–∞ Supabase –≤—Ä—ä–∑–∫–∞...')
    console.log('üìä Supabase URL:', supabaseUrl)
    console.log('üîë Anon Key:', supabaseAnonKey.substring(0, 20) + '...')
    
    // –¢–µ—Å—Ç–≤–∞–º–µ –≤—Ä—ä–∑–∫–∞—Ç–∞ —Å –ø—Ä–æ—Å—Ç ping
    const { data, error } = await supabase.auth.getSession()
    
    if (error) {
      console.log('‚ùå –ì—Ä–µ—à–∫–∞ –ø—Ä–∏ –≤—Ä—ä–∑–∫–∞:', error.message)
    } else {
      console.log('‚úÖ –í—Ä—ä–∑–∫–∞—Ç–∞ —Ä–∞–±–æ—Ç–∏!')
      console.log('üìã Session data:', data)
    }
    
  } catch (error) {
    console.error('‚ùå –ì—Ä–µ—à–∫–∞:', error.message)
    console.log('üí° –¢–æ–≤–∞ –º–æ–∂–µ –¥–∞ –µ –∑–∞—Ä–∞–¥–∏ –º—Ä–µ–∂–æ–≤–∏ –ø—Ä–æ–±–ª–µ–º –∏–ª–∏ –Ω–µ–ø—Ä–∞–≤–∏–ª–Ω–∏ credentials')
  }
}

testConnection() 